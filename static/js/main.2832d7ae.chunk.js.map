{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","components/Card/index.js","components/List/index.js","components/Form/index.js","utils/API.js","pages/EmployeeDirectory.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","Card","props","userDOB","age","console","log","DOB","moment","format","alt","last","src","image","title","first","phone","cell","email","List","state","sortedEmployees","employees","empList","sorted","sortItem","sortList","sort","a","b","itemA","name","toLowerCase","itemB","setState","this","length","prevProps","onClick","map","item","index","key","picture","medium","dob","date","Component","Form","searchField","filteredEmpList","handleInputChange","event","target","value","inputField","filteredList","filter","indexOf","onChange","type","placeholder","axios","get","EmployeeDirectory","API","then","res","data","results","catch","err","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2832d7ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"jumbotron jumbotron-fluid header\">\r\n            <div className=\"container text-center\">\r\n                <h1 className=\"display-3\">React Employee Directory</h1>\r\n                <p className=\"lead\"> Use input field to narrow employees by column headers.</p>\r\n                <p className=\"lead\"> You can also click on the \"Name\" header to sort list by alphabetical order.</p>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className=\"footer text-center\">\r\n            <p>React Employee Directory - JEA 2020</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport moment from \"moment\";\r\n\r\nfunction Card(props) {\r\n    let userDOB = props.age\r\n    console.log(props);\r\n    let DOB = moment(userDOB).format(\"MM-DD-YYYY\");\r\n    console.log(DOB);\r\n\r\n    return (\r\n        <card className=\"card\">\r\n            <div><img alt={props.last} src={props.image}></img></div>\r\n            <div>{props.title} {props.first} {props.last} </div>\r\n            <div>{DOB}</div>\r\n            <div>{props.phone}</div>\r\n            <div>{props.cell}</div>\r\n            <div>{props.email}</div>\r\n        </card>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Card from \"../Card\";\r\n\r\n\r\nclass List extends Component {\r\n    state = {\r\n        sortedEmployees: [],\r\n        employees: this.props.empList,\r\n        sorted: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.state.sortedEmployees.length < 1) {\r\n            this.setState({ sortedEmployees: this.props.empList })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.empList !== prevProps.empList) {\r\n            this.setState({\r\n                sortedEmployees: this.props.empList\r\n            })\r\n        }\r\n    }\r\n\r\n    sortItem = () => {\r\n        let sortList = [];\r\n        if (this.state.sorted) {\r\n            sortList = this.props.empList.sort((a, b) => {\r\n                let itemA = a.name.last.toLowerCase();\r\n                let itemB = b.name.last.toLowerCase();\r\n                if (itemA < itemB)\r\n                    return -1\r\n                if (itemA > itemB)\r\n                    return 1\r\n                return 0\r\n            })\r\n        } else {\r\n            sortList = this.props.empList.sort((a, b) => {\r\n                let itemA = a.name.last.toLowerCase();\r\n                let itemB = b.name.last.toLowerCase();\r\n                if (itemA > itemB)\r\n                    return -1\r\n                if (itemA < itemB)\r\n                    return 1\r\n                return 0\r\n            })\r\n        }\r\n        this.setState({\r\n            sorted: !this.state.sorted,\r\n            sortedEmployees: sortList\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"listHeader\">\r\n                    <div>Photo</div>\r\n                    <div><p onClick={this.sortItem} className=\"name\">Name</p></div>\r\n                    <div>DOB</div>\r\n                    <div>Phone</div>\r\n                    <div>Cell</div>\r\n                    <div>Email</div>\r\n                </div>\r\n                { this.state.sortedEmployees.length > 0 && this.state.sortedEmployees.map((item, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        image={item.picture.medium}\r\n                        title={item.name.title}\r\n                        first={item.name.first}\r\n                        last={item.name.last}\r\n                        age={item.dob.date}\r\n                        phone={item.phone}\r\n                        cell={item.cell}\r\n                        email={item.email}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport List from \"../List\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        searchField: \"\",\r\n        filteredEmpList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.state.filteredEmpList.length < 1) {\r\n            this.setState({ filteredEmpList: this.props.employees })\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ \r\n            searchField: event.target.value \r\n        });\r\n        let inputField = event.target.value;\r\n        const filteredList = this.props.employees.filter((item) => {\r\n            let values = item.name.title + item.name.first + item.name.last + item.dob.date + item.email + item.cell;\r\n            return values.indexOf(inputField) !== -1;\r\n        });\r\n        this.setState({ filteredEmpList: filteredList });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"form\">\r\n                    <input\r\n                        value={this.state.searchField}\r\n                        name=\"searchField\"\r\n                        onChange={event => this.handleInputChange(event)}\r\n                        type=\"text\"\r\n                        placeholder=\"type to search\"\r\n                    />\r\n                </form>\r\n                {this.state.filteredEmpList.length > 0 &&\r\n                    <List empList={this.state.filteredEmpList} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import axios from \"axios\";\r\n\r\nexport default {\r\n    search: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=100&nat=us&inc=picture,name,phone,cell,email,dob\");\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport API from \"../utils/API\";\r\n\r\n\r\nclass EmployeeDirectory extends Component {\r\n    state = {\r\n        employees: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.search()\r\n            .then(res => {\r\n                this.setState({\r\n                    employees: res.data.results\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.employees.length > 0 &&\r\n                    <Form employees={this.state.employees} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EmployeeDirectory;\r\n","import React from 'react';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport EmployeeDirectory from \"./pages/EmployeeDirectory\";\n\n\n\nfunction App() {\n  return (\n\n    <div>\n      <Header />\n      <EmployeeDirectory />\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}